name: 'Begin Kosli Trail'
description:
  'Checks if this is a version tag or main branch.
  For version tag it creates a trail with the tag name in the kosli-tagged-version-flow.
  For main branch it creates a trail with the commit-tag in the kosli-commit-flow.
  For other branches it does nothing.'
inputs:
  kosli-tagged-version-flow:
    description: 'Kosli flow to use if this is a tagged version'
    required: true
  kosli-tagged-version-template:
    description: 'Kosli template to use if this is a tagged version'
    required: true
  kosli-commit-flow:
    description: 'Kosli flow to use if this is not a tagged version'
    required: true
  kosli-commit-template:
    description: 'Kosli template to use if this is not a tagged version'
    required: true

outputs:
  kosli-flow:
    description: 'Kosli flow name'
    value: ${{ steps.setoutput.outputs.kosli-flow }}
  kosli-trail:
    description: 'Kosli trail name'
    value: ${{ steps.setoutput.outputs.kosli-trail }}

runs:
  using: 'composite'
  steps:
    - name: Set flow and trail
      id: setoutput
      shell: bash
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          echo "kosli-flow=${{ inputs.kosli-tagged-version-flow }}" >> $GITHUB_OUTPUT
          echo "kosli-trail=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "TEMPLATE_FILE=${{ inputs.kosli-tagged-version-template }}" >> $GITHUB_ENV
        else
          echo "kosli-flow=${{ inputs.kosli-commit-flow }}" >> $GITHUB_OUTPUT
          echo "kosli-trail=${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "TEMPLATE_FILE=${{ inputs.kosli-commit-template }}" >> $GITHUB_ENV
        fi

    - name: Begin trail
      if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
      uses: kosli-dev/jira-multi-repo-release/.github/actions/kosli-begin-trail@main
      env:
        KOSLI_FLOW: ${{ steps.setoutput.outputs.kosli-flow }}
      with:
        kosli-trail: ${{ steps.setoutput.outputs.kosli-trail }}
        kosli-template-file: ${{ env.TEMPLATE_FILE }}
